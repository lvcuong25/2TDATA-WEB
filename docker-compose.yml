version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: 2tdata-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: 2TDATA
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - 2tdata-network

  # Backend API
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    container_name: 2tdata-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_URI: mongodb://admin:password123@mongodb:27017/2TDATA?authSource=admin
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/2TDATA?authSource=admin
      SECRET_KEY: your-super-secret-jwt-key-change-this-in-production
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 24h
      SEND_OTP_EMAIL: your_email@gmail.com
      SEND_OTP_EMAIL_PASSWORD: your_app_password
      LOG_LEVEL: info
      BCRYPT_SALT_ROUNDS: 12
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    volumes:
      - backend_uploads:/app/uploads
      - ./BE/logs:/app/logs
    networks:
      - 2tdata-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile
    container_name: 2tdata-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - 2tdata-network

  # Nginx Reverse Proxy (Optional - for multi-domain setup)
  nginx-proxy:
    image: nginx:alpine
    container_name: 2tdata-nginx-proxy
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - backend_uploads:/var/www/uploads:ro
    depends_on:
      - backend
      - frontend
    networks:
      - 2tdata-network

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:latest
    container_name: 2tdata-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - 2tdata-network

volumes:
  mongodb_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  2tdata-network:
    driver: bridge
