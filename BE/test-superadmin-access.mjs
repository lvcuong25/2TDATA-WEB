import fetch from 'node-fetch';

const API_URL = 'http://localhost:3004/api';

async function testSuperAdminAccess() {
  try {
    console.log('üîê ƒêang ƒëƒÉng nh·∫≠p v·ªõi super admin...');
    
    // 1. Login
    const loginResponse = await fetch(`${API_URL}/auth/sign-in`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'superadmin@2tdata.com',
        password: 'admin123'
      })
    });
    
    const loginData = await loginResponse.json();
    
    if (!loginResponse.ok) {
      console.error('‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i:', loginData);
      return;
    }
    
    // Extract cookie from response headers
    const cookies = loginResponse.headers.raw()['set-cookie'];
    const authToken = cookies?.find(cookie => cookie.includes('authToken'));
    
    if (!authToken) {
      console.error('‚ùå Kh√¥ng t√¨m th·∫•y authToken trong response');
      return;
    }
    
    console.log('‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng');
    console.log('üë§ User:', loginData.data?.email);
    console.log('üìã Role:', loginData.data?.role);
    
    // 2. Get all databases
    console.log('\nüìÇ ƒêang l·∫•y danh s√°ch database...');
    
    const dbResponse = await fetch(`${API_URL}/database/databases`, {
      method: 'GET',
      headers: {
        'Cookie': authToken
      }
    });
    
    const dbData = await dbResponse.json();
    
    if (!dbResponse.ok) {
      console.error('‚ùå L·ªói khi l·∫•y database:', dbData);
      return;
    }
    
    // 3. Display results
    console.log('\n‚úÖ K·∫æT QU·∫¢:');
    console.log(`üìä T·ªïng s·ªë database: ${dbData.data?.length || 0}`);
    
    if (dbData.data && dbData.data.length > 0) {
      console.log('\nüìö Danh s√°ch database:');
      
      // Group by site
      const dbBySite = {};
      dbData.data.forEach(db => {
        const siteId = db.siteId || 'no-site';
        if (!dbBySite[siteId]) {
          dbBySite[siteId] = [];
        }
        dbBySite[siteId].push(db.name);
      });
      
      Object.keys(dbBySite).forEach(siteId => {
        console.log(`\n  Site ID: ${siteId}`);
        dbBySite[siteId].forEach(dbName => {
          console.log(`    ‚Ä¢ ${dbName}`);
        });
      });
      
      console.log('\n‚úÖ SUPER ADMIN C√ì TH·ªÇ XEM T·∫§T C·∫¢ DATABASE!');
    } else {
      console.log('‚ö†Ô∏è Kh√¥ng c√≥ database n√†o ƒë∆∞·ª£c tr·∫£ v·ªÅ');
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error.message);
  }
}

testSuperAdminAccess();
